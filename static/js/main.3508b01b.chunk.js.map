{"version":3,"sources":["Contacts/Contacts.module.css","Form/Form.js","Contacts/Contact.js","Contacts/Contacts.js","Search/Search.js","App.js","index.js","Form/Form.module.css","Search/Search.module.css"],"names":["module","exports","Form","onSubmit","contactList","useState","name","setName","number","setNumber","handleInputChange","event","target","inputName","value","reset","contacts","map","contact","toLowerCase","preventDefault","includes","Toastr","type","onChange","pattern","title","required","className","s","input","button","Contact","id","onDelete","item","text","onClick","Contacts","list","Search","onSearch","label","App","setContacts","filter","setFilter","lowerCasedFilter","filteredContacts","useEffect","storedContacts","JSON","parse","localStorage","getItem","isFirstRender","useRef","current","setItem","stringify","data","prevContacts","shortid","generate","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kKACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,2B,yKC6EtGC,MAxEf,YAA0C,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACxB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAAAC,GACxB,MAAmCA,EAAMC,OAA3BC,EAAd,EAAQP,KAAiBQ,EAAzB,EAAyBA,MAEP,SAAdD,EACFN,EAAQO,GACe,WAAdD,GACTJ,EAAUK,IAIRC,EAAQ,WACZR,EAAQ,IACRE,EAAU,KAiBZ,OACE,mCACE,uBAAMN,SAhBW,SAAAQ,GACnB,IAAMK,EAAWZ,EAAYa,KAAI,SAAAC,GAAO,OAAIA,EAAQZ,KAAKa,iBAIzD,GAFAR,EAAMS,iBAEFJ,EAASK,SAASf,EAAKa,eAGzB,OAFAG,QAAA,UAAgBhB,EAAhB,iCACAS,IAGFZ,EAAS,CAAEG,OAAME,WACjBO,KAKE,UACE,kCACG,IADH,QAGE,uBACEQ,KAAK,OACLjB,KAAK,OACLQ,MAAOR,EACPkB,SAAUd,EACVe,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,UAAWC,IAAEC,WAGjB,kCACG,IADH,UAGE,uBACEP,KAAK,MACLjB,KAAK,SACLQ,MAAON,EACPgB,SAAUd,EACVe,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,UAAWC,IAAEC,WAGjB,wBAAQP,KAAK,SAASK,UAAWC,IAAEE,OAAnC,+B,gBCtDOC,MAbf,YAAkD,IAA/BC,EAA8B,EAA9BA,GAAI3B,EAA0B,EAA1BA,KAAME,EAAoB,EAApBA,OAAQ0B,EAAY,EAAZA,SACnC,OACE,qBAAIN,UAAWC,IAAEM,KAAjB,UACE,oBAAGP,UAAWC,IAAEO,KAAhB,UACG9B,EADH,KACWE,KAEX,wBAAQe,KAAK,SAASc,QAAS,kBAAMH,EAASD,IAAKL,UAAWC,IAAEE,OAAhE,mBCWSO,MAhBf,YAA2C,IAAvBtB,EAAsB,EAAtBA,SAAUkB,EAAY,EAAZA,SAC5B,OACE,oBAAIN,UAAWC,IAAEU,KAAjB,SACGvB,EAASC,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CAEEe,GAAIf,EAAQe,GACZ3B,KAAMY,EAAQZ,KACdE,OAAQU,EAAQV,OAChB0B,SAAUA,GAJLhB,EAAQe,U,gBCSRO,MAff,YAAsC,IAApB1B,EAAmB,EAAnBA,MAAO2B,EAAY,EAAZA,SACvB,OACE,wBAAOb,UAAWC,IAAEa,MAApB,UACG,IADH,yBAGE,uBACEnB,KAAK,OACLT,MAAOA,EACPU,SAAUiB,EACVb,UAAWC,IAAEC,YCsDNa,MA5Df,WACE,MAAgCtC,mBAAS,CACvC,CAAE4B,GAAI,OAAQ3B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEyB,GAAI,OAAQ3B,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEyB,GAAI,OAAQ3B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEyB,GAAI,OAAQ3B,KAAM,iBAAkBE,OAAQ,eAJhD,mBAAOQ,EAAP,KAAiB4B,EAAjB,KAMA,EAA4BvC,mBAAS,IAArC,mBAAOwC,EAAP,KAAeC,EAAf,KAEMC,EAAmBF,EAAO1B,cAC1B6B,EAAmBhC,EAAS6B,QAAO,SAAA3B,GAAO,OAC9CA,EAAQZ,KAAKa,cAAcE,SAAS0B,MAGtCE,qBAAU,WACR,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAEnDJ,GACFN,EAAYM,KAEb,IAEH,IAAMK,EAAgBC,kBAAO,GA2B7B,OAzBAP,qBAAU,WACJM,EAAcE,QAChBF,EAAcE,SAAU,EAG1BJ,aAAaK,QAAQ,WAAYP,KAAKQ,UAAU3C,MAC/C,CAACA,IAoBF,sBAAKY,UAAU,UAAf,UACE,oBAAIA,UAAU,aAAd,uBACA,cAAC,EAAD,CAAMzB,SApBY,SAAAyD,GACpBhB,GAAY,SAAAiB,GAAY,4BACnBA,GADmB,cAEpB5B,GAAI6B,IAAQC,YAAeH,SAiBExD,YAAaY,IAC5C,oBAAIY,UAAU,QAAd,sBACA,cAAC,EAAD,CAAQd,MAAO+B,EAAQJ,SATN,SAAA9B,GACnBmC,EAAUnC,EAAMC,OAAOE,UASrB,cAAC,EAAD,CAAUE,SAAUgC,EAAkBd,SAhBpB,SAAA8B,GACpBpB,GAAY,SAAA5B,GAAQ,OAClBA,EAAS6B,QAAO,SAAA3B,GAAO,OAAIA,EAAQe,KAAO+B,eCzChDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BrE,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,OAAS,uB,kBCAvDD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.3508b01b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__1_vNN\",\"text\":\"Contacts_text__2Po0Q\",\"item\":\"Contacts_item__2vGWA\",\"button\":\"Contacts_button__3WZOi\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Toastr from 'toastr';\nimport '../../node_modules/toastr/build/toastr.css';\nimport s from './Form.module.css';\n\nfunction Form({ onSubmit, contactList }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name: inputName, value } = event.target;\n\n    if (inputName === 'name') {\n      setName(value);\n    } else if (inputName === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    const contacts = contactList.map(contact => contact.name.toLowerCase());\n\n    event.preventDefault();\n\n    if (contacts.includes(name.toLowerCase())) {\n      Toastr.error(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n    onSubmit({ name, number });\n    reset();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          {' '}\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={s.input}\n          />\n        </label>\n        <label>\n          {' '}\n          Number:\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n  contactList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nfunction Contact({ id, name, number, onDelete }) {\n  return (\n    <li className={s.item}>\n      <p className={s.text}>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={() => onDelete(id)} className={s.button}>\n        X\n      </button>\n    </li>\n  );\n}\n\nexport default Contact;\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n};\n","import s from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport Contact from './Contact';\n\nfunction Contacts({ contacts, onDelete }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <Contact\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDelete={onDelete}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default Contacts;\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Search.module.css';\n\nfunction Search({ value, onSearch }) {\n  return (\n    <label className={s.label}>\n      {' '}\n      Find contacts by name:\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onSearch}\n        className={s.input}\n      ></input>\n    </label>\n  );\n}\n\nexport default Search;\n\nSearch.propTypes = {\n  value: PropTypes.string,\n  onSearch: PropTypes.func,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport shortid from 'shortid';\nimport Form from './Form/Form';\nimport Contacts from './Contacts/Contacts';\nimport Search from './Search/Search';\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  const lowerCasedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(lowerCasedFilter),\n  );\n\n  useEffect(() => {\n    const storedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (storedContacts) {\n      setContacts(storedContacts);\n    }\n  }, []);\n\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const submitHandler = data => {\n    setContacts(prevContacts => [\n      ...prevContacts,\n      { id: shortid.generate(), ...data },\n    ]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts =>\n      contacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <h1 className=\"main-title\">Phonebook</h1>\n      <Form onSubmit={submitHandler} contactList={contacts} />\n      <h2 className=\"title\">Contacts</h2>\n      <Search value={filter} onSearch={handleFilter} />\n      <Contacts contacts={filteredContacts} onDelete={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__2nLUA\",\"button\":\"Form_button__3Fold\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Search_label__1-Xmi\",\"input\":\"Search_input__a7yxD\"};"],"sourceRoot":""}