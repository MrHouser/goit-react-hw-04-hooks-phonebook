{"version":3,"sources":["Contacts/Contacts.module.css","Form/Form.js","Contacts/Contact.js","Contacts/Contacts.js","Search/Search.js","App.js","index.js","Form/Form.module.css","Search/Search.module.css"],"names":["module","exports","Form","onSubmit","contactList","useState","name","setName","number","setNumber","handleInputChange","event","target","inputName","value","reset","contacts","map","contact","toLowerCase","preventDefault","includes","Toastr","type","onChange","pattern","title","required","className","s","input","button","Contact","id","onDelete","item","text","onClick","Contacts","list","Search","onSearch","label","App","setContacts","filter","setFilter","isFirstRender","setIsFirstRender","lowerCasedFilter","filteredContacts","useEffect","storedContacts","JSON","parse","localStorage","getItem","setItem","stringify","data","prevContacts","shortid","generate","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bbff612.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__1_vNN\",\"text\":\"Contacts_text__2Po0Q\",\"item\":\"Contacts_item__2vGWA\",\"button\":\"Contacts_button__3WZOi\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Toastr from 'toastr';\r\nimport '../../node_modules/toastr/build/toastr.css';\r\nimport s from './Form.module.css';\r\n\r\nfunction Form({ onSubmit, contactList }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInputChange = event => {\r\n    const { name: inputName, value } = event.target;\r\n\r\n    if (inputName === 'name') {\r\n      setName(value);\r\n    } else if (inputName === 'number') {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    const contacts = contactList.map(contact => contact.name.toLowerCase());\r\n\r\n    event.preventDefault();\r\n\r\n    if (contacts.includes(name.toLowerCase())) {\r\n      Toastr.error(`${name} is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          {' '}\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleInputChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <label>\r\n          {' '}\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleInputChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  contactList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\n\r\nfunction Contact({ id, name, number, onDelete }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <p className={s.text}>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={() => onDelete(id)} className={s.button}>\r\n        X\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func,\r\n};\r\n","import s from './Contacts.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport Contact from './Contact';\r\n\r\nfunction Contacts({ contacts, onDelete }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(contact => (\r\n        <Contact\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onDelete={onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDelete: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Search.module.css';\r\n\r\nfunction Search({ value, onSearch }) {\r\n  return (\r\n    <label className={s.label}>\r\n      {' '}\r\n      Find contacts by name:\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onSearch}\r\n        className={s.input}\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n\r\nSearch.propTypes = {\r\n  value: PropTypes.string,\r\n  onSearch: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport Form from './Form/Form';\nimport Contacts from './Contacts/Contacts';\nimport Search from './Search/Search';\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n  const [isFirstRender, setIsFirstRender] = useState(true);\n\n  const lowerCasedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(lowerCasedFilter),\n  );\n\n  useEffect(() => {\n    const storedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n    if (storedContacts) {\n      setContacts(storedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isFirstRender) {\n      setIsFirstRender(false);\n      return;\n    }\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const submitHandler = data => {\n    setContacts(prevContacts => [\n      ...prevContacts,\n      { id: shortid.generate(), ...data },\n    ]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts =>\n      contacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const handleFilter = event => {\n    setFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <h1 className=\"main-title\">Phonebook</h1>\n      <Form onSubmit={submitHandler} contactList={contacts} />\n      <h2 className=\"title\">Contacts</h2>\n      <Search value={filter} onSearch={handleFilter} />\n      <Contacts contacts={filteredContacts} onDelete={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__2nLUA\",\"button\":\"Form_button__3Fold\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Search_label__1-Xmi\",\"input\":\"Search_input__a7yxD\"};"],"sourceRoot":""}